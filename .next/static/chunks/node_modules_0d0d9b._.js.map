{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["../../src/utils.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/utils.js"],"sourcesContent":["import type { Mutation } from './mutation'\nimport type { Query } from './query'\nimport type {\n  FetchStatus,\n  MutationKey,\n  MutationStatus,\n  QueryKey,\n  QueryOptions,\n} from './types'\n\n// TYPES\n\nexport interface QueryFilters {\n  /**\n   * Filter to active queries, inactive queries or all queries\n   */\n  type?: QueryTypeFilter\n  /**\n   * Match query key exactly\n   */\n  exact?: boolean\n  /**\n   * Include queries matching this predicate function\n   */\n  predicate?: (query: Query) => boolean\n  /**\n   * Include queries matching this query key\n   */\n  queryKey?: QueryKey\n  /**\n   * Include or exclude stale queries\n   */\n  stale?: boolean\n  /**\n   * Include queries matching their fetchStatus\n   */\n  fetchStatus?: FetchStatus\n}\n\nexport interface MutationFilters {\n  /**\n   * Match mutation key exactly\n   */\n  exact?: boolean\n  /**\n   * Include mutations matching this predicate function\n   */\n  predicate?: (mutation: Mutation<any, any, any>) => boolean\n  /**\n   * Include mutations matching this mutation key\n   */\n  mutationKey?: MutationKey\n  /**\n   * Filter by mutation status\n   */\n  status?: MutationStatus\n}\n\nexport type Updater<TInput, TOutput> = TOutput | ((input: TInput) => TOutput)\n\nexport type QueryTypeFilter = 'all' | 'active' | 'inactive'\n\n// UTILS\n\nexport const isServer = typeof window === 'undefined' || 'Deno' in globalThis\n\nexport function noop(): undefined {\n  return undefined\n}\n\nexport function functionalUpdate<TInput, TOutput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as (_: TInput) => TOutput)(input)\n    : updater\n}\n\nexport function isValidTimeout(value: unknown): value is number {\n  return typeof value === 'number' && value >= 0 && value !== Infinity\n}\n\nexport function timeUntilStale(updatedAt: number, staleTime?: number): number {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0)\n}\n\nexport function matchQuery(\n  filters: QueryFilters,\n  query: Query<any, any, any, any>,\n): boolean {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale,\n  } = filters\n\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive()\n    if (type === 'active' && !isActive) {\n      return false\n    }\n    if (type === 'inactive' && isActive) {\n      return false\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false\n  }\n\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false\n  }\n\n  if (predicate && !predicate(query)) {\n    return false\n  }\n\n  return true\n}\n\nexport function matchMutation(\n  filters: MutationFilters,\n  mutation: Mutation<any, any>,\n): boolean {\n  const { exact, status, predicate, mutationKey } = filters\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false\n    }\n  }\n\n  if (status && mutation.state.status !== status) {\n    return false\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hashQueryKeyByOptions<TQueryKey extends QueryKey = QueryKey>(\n  queryKey: TQueryKey,\n  options?: Pick<QueryOptions<any, any, any, any>, 'queryKeyHashFn'>,\n): string {\n  const hashFn = options?.queryKeyHashFn || hashKey\n  return hashFn(queryKey)\n}\n\n/**\n * Default query & mutation keys hash function.\n * Hashes the value into a stable hash.\n */\nexport function hashKey(queryKey: QueryKey | MutationKey): string {\n  return JSON.stringify(queryKey, (_, val) =>\n    isPlainObject(val)\n      ? Object.keys(val)\n          .sort()\n          .reduce((result, key) => {\n            result[key] = val[key]\n            return result\n          }, {} as any)\n      : val,\n  )\n}\n\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a: QueryKey, b: QueryKey): boolean\nexport function partialMatchKey(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]))\n  }\n\n  return false\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function replaceEqualDeep<T>(a: unknown, b: T): T\nexport function replaceEqualDeep(a: any, b: any): any {\n  if (a === b) {\n    return a\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b)\n\n  if (array || (isPlainObject(a) && isPlainObject(b))) {\n    const aItems = array ? a : Object.keys(a)\n    const aSize = aItems.length\n    const bItems = array ? b : Object.keys(b)\n    const bSize = bItems.length\n    const copy: any = array ? [] : {}\n\n    let equalItems = 0\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i]\n      if (\n        !array &&\n        a[key] === undefined &&\n        b[key] === undefined &&\n        aItems.includes(key)\n      ) {\n        copy[key] = undefined\n        equalItems++\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key])\n        if (copy[key] === a[key] && a[key] !== undefined) {\n          equalItems++\n        }\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy\n  }\n\n  return b\n}\n\n/**\n * Shallow compare objects.\n */\nexport function shallowEqualObjects<T extends Record<string, any>>(\n  a: T,\n  b: T | undefined,\n): boolean {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function isPlainArray(value: unknown) {\n  return Array.isArray(value) && value.length === Object.keys(value).length\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any): o is Object {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has no constructor\n  const ctor = o.constructor\n  if (ctor === undefined) {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms)\n  })\n}\n\nexport function replaceData<\n  TData,\n  TOptions extends QueryOptions<any, any, any, any>,\n>(prevData: TData | undefined, data: TData, options: TOptions): TData {\n  if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data) as TData\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data)\n  }\n  return data\n}\n\nexport function keepPreviousData<T>(\n  previousData: T | undefined,\n): T | undefined {\n  return previousData\n}\n\nexport function addToEnd<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [...items, item]\n  return max && newItems.length > max ? newItems.slice(1) : newItems\n}\n\nexport function addToStart<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [item, ...items]\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems\n}\n\nexport const skipToken = Symbol()\nexport type SkipToken = typeof skipToken\n",null],"names":[],"mappings":"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"}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["../../src/notifyManager.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/notifyManager.js"],"sourcesContent":["// TYPES\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends Array<unknown>> = (...args: T) => void\n\ntype ScheduleFunction = (callback: () => void) => void\n\nexport function createNotifyManager() {\n  let queue: Array<NotifyCallback> = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n  let scheduleFn: ScheduleFunction = (cb) => setTimeout(cb, 0)\n\n  const setScheduler = (fn: ScheduleFunction) => {\n    scheduleFn = fn\n  }\n\n  const batch = <T>(callback: () => T): T => {\n    let result\n    transactions++\n    try {\n      result = callback()\n    } finally {\n      transactions--\n      if (!transactions) {\n        flush()\n      }\n    }\n    return result\n  }\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  const batchCalls = <T extends Array<unknown>>(\n    callback: BatchCallsCallback<T>,\n  ): BatchCallsCallback<T> => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args)\n      })\n    }\n  }\n\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  const setNotifyFunction = (fn: NotifyFunction) => {\n    notifyFn = fn\n  }\n\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  const setBatchNotifyFunction = (fn: BatchNotifyFunction) => {\n    batchNotifyFn = fn\n  }\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction,\n    setScheduler,\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n",null],"names":[],"mappings":";;;;;AAYO,SAAS;IACd,IAAI,QAA+B,EAAC;IACpC,IAAI,eAAe;IACnB,IAAI,WAA2B,CAAC;QAC9B;IACF;IACA,IAAI,gBAAqC,CAAC;QACxC;IACF;IACA,IAAI,aAA+B,CAAC,KAAO,WAAW,IAAI;IAE1D,MAAM,eAAe,CAAC;QACpB,aAAa;IACf;IAEA,MAAM,QAAQ,CAAI;QAChB,IAAI;QACJ;QACA,IAAI;YACF,SAAS;QACX,SAAE;YACA;YACA,IAAI,CAAC,cAAc;gBACjB;YACF;QACF;QACA,OAAO;IACT;IAEA,MAAM,WAAW,CAAC;QAChB,IAAI,cAAc;YAChB,MAAM,IAAA,CAAK;QACb,OAAO;YACL,WAAW;gBACT,SAAS;YACX;QACF;IACF;IAKA,MAAM,aAAa,CACjB;QAEA,OAAO,CAAA,GAAI;YACT,SAAS;gBACP,YAAY;YACd;QACF;IACF;IAEA,MAAM,QAAQ;QACZ,MAAM,gBAAgB;QACtB,QAAQ,EAAC;QACT,IAAI,cAAc,MAAA,EAAQ;YACxB,WAAW;gBACT,cAAc;oBACZ,cAAc,OAAA,CAAQ,CAAC;wBACrB,SAAS;oBACX;gBACF;YACF;QACF;IACF;IAMA,MAAM,oBAAoB,CAAC;QACzB,WAAW;IACb;IAMA,MAAM,yBAAyB,CAAC;QAC9B,gBAAgB;IAClB;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;IACF;AACF;AAGO,IAAM,gBAAgB"}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["../../src/subscribable.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/subscribable.js"],"sourcesContent":["type Listener = () => void\n\nexport class Subscribable<TListener extends Function = Listener> {\n  protected listeners: Set<TListener>\n\n  constructor() {\n    this.listeners = new Set()\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    this.listeners.add(listener)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(listener)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n",null],"names":[],"mappings":";;;;AAEO,IAAM,eAAN;IAGL,aAAc;QACZ,IAAA,CAAK,SAAA,GAAY,aAAA,GAAA,IAAI;QACrB,IAAA,CAAK,SAAA,GAAY,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,IAAI;IAC3C;IAEA,UAAU,QAAA,EAAiC;QACzC,IAAA,CAAK,SAAA,CAAU,GAAA,CAAI;QAEnB,IAAA,CAAK,WAAA;QAEL,OAAO;YACL,IAAA,CAAK,SAAA,CAAU,MAAA,CAAO;YACtB,IAAA,CAAK,aAAA;QACP;IACF;IAEA,eAAwB;QACtB,OAAO,IAAA,CAAK,SAAA,CAAU,IAAA,GAAO;IAC/B;IAEU,cAAoB,CAE9B;IAEU,gBAAsB,CAEhC;AACF"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["../../src/focusManager.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/focusManager.js"],"sourcesContent":["import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (focused: boolean) => void\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable<Listener> {\n  #focused?: boolean\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibilitychange\n        window.addEventListener('visibilitychange', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.#focused !== focused\n    if (changed) {\n      this.#focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    const isFocused = this.isFocused()\n    this.listeners.forEach((listener) => {\n      listener(isFocused)\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.#focused === 'boolean') {\n      return this.#focused\n    }\n\n    // document global can be unavailable in react native\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return globalThis.document?.visibilityState !== 'hidden'\n  }\n}\n\nexport const focusManager = new FocusManager()\n",null],"names":[],"mappings":";;;;;;;;;;AASO,IAAM,eAAN;IACL,CAAA,OAAA,CAAA;IACA,CAAA,OAAA,CAAA;IAEA,CAAA,KAAA,CAAA;IAEA,aAAc;QACZ,KAAA;QACA,IAAA,CAAK,CAAA,KAAA,GAAS,CAAC;YAGb,IAAI,2LAAa,OAAO,gBAAA,EAAkB;gBACxC,MAAM,WAAW,IAAM;gBAEvB,OAAO,gBAAA,CAAiB,oBAAoB,UAAU;gBAEtD,OAAO;oBAEL,OAAO,mBAAA,CAAoB,oBAAoB;gBACjD;YACF;YACA;QACF;IACF;IAEU,cAAoB;QAC5B,IAAI,CAAC,IAAA,CAAK,CAAA,OAAA,EAAU;YAClB,IAAA,CAAK,gBAAA,CAAiB,IAAA,CAAK,CAAA,KAAM;QACnC;IACF;IAEU,gBAAgB;QACxB,IAAI,CAAC,IAAA,CAAK,YAAA,IAAgB;YACxB,IAAA,CAAK,CAAA,OAAA;YACL,IAAA,CAAK,CAAA,OAAA,GAAW,KAAA;QAClB;IACF;IAEA,iBAAiB,KAAA,EAAsB;QACrC,IAAA,CAAK,CAAA,KAAA,GAAS;QACd,IAAA,CAAK,CAAA,OAAA;QACL,IAAA,CAAK,CAAA,OAAA,GAAW,MAAM,CAAC;YACrB,IAAI,OAAO,YAAY,WAAW;gBAChC,IAAA,CAAK,UAAA,CAAW;YAClB,OAAO;gBACL,IAAA,CAAK,OAAA;YACP;QACF;IACF;IAEA,WAAW,OAAA,EAAyB;QAClC,MAAM,UAAU,IAAA,CAAK,CAAA,OAAA,KAAa;QAClC,IAAI,SAAS;YACX,IAAA,CAAK,CAAA,OAAA,GAAW;YAChB,IAAA,CAAK,OAAA;QACP;IACF;IAEA,UAAgB;QACd,MAAM,YAAY,IAAA,CAAK,SAAA;QACvB,IAAA,CAAK,SAAA,CAAU,OAAA,CAAQ,CAAC;YACtB,SAAS;QACX;IACF;IAEA,YAAqB;QACnB,IAAI,OAAO,IAAA,CAAK,CAAA,OAAA,KAAa,WAAW;YACtC,OAAO,IAAA,CAAK,CAAA,OAAA;QACd;QAIA,OAAO,WAAW,QAAA,EAAU,oBAAoB;IAClD;AACF;AAEO,IAAM,eAAe,IAAI"}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["../../src/onlineManager.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/onlineManager.js"],"sourcesContent":["import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (online: boolean) => void\ntype SetupFn = (setOnline: Listener) => (() => void) | undefined\n\nexport class OnlineManager extends Subscribable<Listener> {\n  #online = true\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true)\n        const offlineListener = () => onOnline(false)\n        // Listen to online\n        window.addEventListener('online', onlineListener, false)\n        window.addEventListener('offline', offlineListener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', onlineListener)\n          window.removeEventListener('offline', offlineListener)\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup(this.setOnline.bind(this))\n  }\n\n  setOnline(online: boolean): void {\n    const changed = this.#online !== online\n\n    if (changed) {\n      this.#online = online\n      this.listeners.forEach((listener) => {\n        listener(online)\n      })\n    }\n  }\n\n  isOnline(): boolean {\n    return this.#online\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n",null],"names":[],"mappings":";;;;;;;;;;AAMO,IAAM,gBAAN;IACL,CAAA,MAAA,GAAU,KAAA;IACV,CAAA,OAAA,CAAA;IAEA,CAAA,KAAA,CAAA;IAEA,aAAc;QACZ,KAAA;QACA,IAAA,CAAK,CAAA,KAAA,GAAS,CAAC;YAGb,IAAI,2LAAa,OAAO,gBAAA,EAAkB;gBACxC,MAAM,iBAAiB,IAAM,SAAS;gBACtC,MAAM,kBAAkB,IAAM,SAAS;gBAEvC,OAAO,gBAAA,CAAiB,UAAU,gBAAgB;gBAClD,OAAO,gBAAA,CAAiB,WAAW,iBAAiB;gBAEpD,OAAO;oBAEL,OAAO,mBAAA,CAAoB,UAAU;oBACrC,OAAO,mBAAA,CAAoB,WAAW;gBACxC;YACF;YAEA;QACF;IACF;IAEU,cAAoB;QAC5B,IAAI,CAAC,IAAA,CAAK,CAAA,OAAA,EAAU;YAClB,IAAA,CAAK,gBAAA,CAAiB,IAAA,CAAK,CAAA,KAAM;QACnC;IACF;IAEU,gBAAgB;QACxB,IAAI,CAAC,IAAA,CAAK,YAAA,IAAgB;YACxB,IAAA,CAAK,CAAA,OAAA;YACL,IAAA,CAAK,CAAA,OAAA,GAAW,KAAA;QAClB;IACF;IAEA,iBAAiB,KAAA,EAAsB;QACrC,IAAA,CAAK,CAAA,KAAA,GAAS;QACd,IAAA,CAAK,CAAA,OAAA;QACL,IAAA,CAAK,CAAA,OAAA,GAAW,MAAM,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,IAAI;IAChD;IAEA,UAAU,MAAA,EAAuB;QAC/B,MAAM,UAAU,IAAA,CAAK,CAAA,MAAA,KAAY;QAEjC,IAAI,SAAS;YACX,IAAA,CAAK,CAAA,MAAA,GAAU;YACf,IAAA,CAAK,SAAA,CAAU,OAAA,CAAQ,CAAC;gBACtB,SAAS;YACX;QACF;IACF;IAEA,WAAoB;QAClB,OAAO,IAAA,CAAK,CAAA,MAAA;IACd;AACF;AAEO,IAAM,gBAAgB,IAAI"}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["../../src/retryer.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/retryer.js"],"sourcesContent":["import { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { isServer, sleep } from './utils'\nimport type { CancelOptions, DefaultError, NetworkMode } from './types'\n\n// TYPES\n\ninterface RetryerConfig<TData = unknown, TError = DefaultError> {\n  fn: () => TData | Promise<TData>\n  abort?: () => void\n  onError?: (error: TError) => void\n  onSuccess?: (data: TData) => void\n  onFail?: (failureCount: number, error: TError) => void\n  onPause?: () => void\n  onContinue?: () => void\n  retry?: RetryValue<TError>\n  retryDelay?: RetryDelayValue<TError>\n  networkMode: NetworkMode | undefined\n}\n\nexport interface Retryer<TData = unknown> {\n  promise: Promise<TData>\n  cancel: (cancelOptions?: CancelOptions) => void\n  continue: () => Promise<unknown>\n  cancelRetry: () => void\n  continueRetry: () => void\n}\n\nexport type RetryValue<TError> = boolean | number | ShouldRetryFunction<TError>\n\ntype ShouldRetryFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => boolean\n\nexport type RetryDelayValue<TError> = number | RetryDelayFunction<TError>\n\ntype RetryDelayFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => number\n\nfunction defaultRetryDelay(failureCount: number) {\n  return Math.min(1000 * 2 ** failureCount, 30000)\n}\n\nexport function canFetch(networkMode: NetworkMode | undefined): boolean {\n  return (networkMode ?? 'online') === 'online'\n    ? onlineManager.isOnline()\n    : true\n}\n\nexport class CancelledError {\n  revert?: boolean\n  silent?: boolean\n  constructor(options?: CancelOptions) {\n    this.revert = options?.revert\n    this.silent = options?.silent\n  }\n}\n\nexport function isCancelledError(value: any): value is CancelledError {\n  return value instanceof CancelledError\n}\n\nexport function createRetryer<TData = unknown, TError = DefaultError>(\n  config: RetryerConfig<TData, TError>,\n): Retryer<TData> {\n  let isRetryCancelled = false\n  let failureCount = 0\n  let isResolved = false\n  let continueFn: ((value?: unknown) => boolean) | undefined\n  let promiseResolve: (data: TData) => void\n  let promiseReject: (error: TError) => void\n\n  const promise = new Promise<TData>((outerResolve, outerReject) => {\n    promiseResolve = outerResolve\n    promiseReject = outerReject\n  })\n\n  const cancel = (cancelOptions?: CancelOptions): void => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions))\n\n      config.abort?.()\n    }\n  }\n  const cancelRetry = () => {\n    isRetryCancelled = true\n  }\n\n  const continueRetry = () => {\n    isRetryCancelled = false\n  }\n\n  const shouldPause = () =>\n    !focusManager.isFocused() ||\n    (config.networkMode !== 'always' && !onlineManager.isOnline())\n\n  const resolve = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onSuccess?.(value)\n      continueFn?.()\n      promiseResolve(value)\n    }\n  }\n\n  const reject = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onError?.(value)\n      continueFn?.()\n      promiseReject(value)\n    }\n  }\n\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        const canContinue = isResolved || !shouldPause()\n        if (canContinue) {\n          continueResolve(value)\n        }\n        return canContinue\n      }\n      config.onPause?.()\n    }).then(() => {\n      continueFn = undefined\n      if (!isResolved) {\n        config.onContinue?.()\n      }\n    })\n  }\n\n  // Create loop function\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return\n    }\n\n    let promiseOrValue: any\n\n    // Execute query\n    try {\n      promiseOrValue = config.fn()\n    } catch (error) {\n      promiseOrValue = Promise.reject(error)\n    }\n\n    Promise.resolve(promiseOrValue)\n      .then(resolve)\n      .catch((error) => {\n        // Stop if the fetch is already resolved\n        if (isResolved) {\n          return\n        }\n\n        // Do we need to retry the request?\n        const retry = config.retry ?? (isServer ? 0 : 3)\n        const retryDelay = config.retryDelay ?? defaultRetryDelay\n        const delay =\n          typeof retryDelay === 'function'\n            ? retryDelay(failureCount, error)\n            : retryDelay\n        const shouldRetry =\n          retry === true ||\n          (typeof retry === 'number' && failureCount < retry) ||\n          (typeof retry === 'function' && retry(failureCount, error))\n\n        if (isRetryCancelled || !shouldRetry) {\n          // We are done if the query does not need to be retried\n          reject(error)\n          return\n        }\n\n        failureCount++\n\n        // Notify on fail\n        config.onFail?.(failureCount, error)\n\n        // Delay\n        sleep(delay)\n          // Pause if the document is not visible or when the device is offline\n          .then(() => {\n            if (shouldPause()) {\n              return pause()\n            }\n            return\n          })\n          .then(() => {\n            if (isRetryCancelled) {\n              reject(error)\n            } else {\n              run()\n            }\n          })\n      })\n  }\n\n  // Start loop\n  if (canFetch(config.networkMode)) {\n    run()\n  } else {\n    pause().then(run)\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn?.()\n      return didContinue ? promise : Promise.resolve()\n    },\n    cancelRetry,\n    continueRetry,\n  }\n}\n",null],"names":[],"mappings":";;;;;;;;;;;;;;AA0CA,SAAS,kBAAkB,YAAA;IACzB,OAAO,KAAK,GAAA,CAAI,MAAO,KAAK,cAAc;AAC5C;AAEO,SAAS,SAAS,WAAA;IACvB,OAAA,CAAQ,eAAe,QAAA,MAAc,WACjC,oMAAc,QAAA,KACd;AACN;AAEO,IAAM,iBAAN;IAGL,YAAY,OAAA,CAAyB;QACnC,IAAA,CAAK,MAAA,GAAS,SAAS;QACvB,IAAA,CAAK,MAAA,GAAS,SAAS;IACzB;AACF;AAEO,SAAS,iBAAiB,KAAA;IAC/B,OAAO,iBAAiB;AAC1B;AAEO,SAAS,cACd,MAAA;IAEA,IAAI,mBAAmB;IACvB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI;IACJ,IAAI;IACJ,IAAI;IAEJ,MAAM,UAAU,IAAI,QAAe,CAAC,cAAc;QAChD,iBAAiB;QACjB,gBAAgB;IAClB;IAEA,MAAM,SAAS,CAAC;QACd,IAAI,CAAC,YAAY;YACf,OAAO,IAAI,eAAe;YAE1B,OAAO,KAAA;QACT;IACF;IACA,MAAM,cAAc;QAClB,mBAAmB;IACrB;IAEA,MAAM,gBAAgB;QACpB,mBAAmB;IACrB;IAEA,MAAM,cAAc,IAClB,CAAC,kMAAa,SAAA,MACb,OAAO,WAAA,KAAgB,YAAY,CAAC,oMAAc,QAAA;IAErD,MAAM,UAAU,CAAC;QACf,IAAI,CAAC,YAAY;YACf,aAAa;YACb,OAAO,SAAA,GAAY;YACnB;YACA,eAAe;QACjB;IACF;IAEA,MAAM,SAAS,CAAC;QACd,IAAI,CAAC,YAAY;YACf,aAAa;YACb,OAAO,OAAA,GAAU;YACjB;YACA,cAAc;QAChB;IACF;IAEA,MAAM,QAAQ;QACZ,OAAO,IAAI,QAAQ,CAAC;YAClB,aAAa,CAAC;gBACZ,MAAM,cAAc,cAAc,CAAC;gBACnC,IAAI,aAAa;oBACf,gBAAgB;gBAClB;gBACA,OAAO;YACT;YACA,OAAO,OAAA;QACT,GAAG,IAAA,CAAK;YACN,aAAa,KAAA;YACb,IAAI,CAAC,YAAY;gBACf,OAAO,UAAA;YACT;QACF;IACF;IAGA,MAAM,MAAM;QAEV,IAAI,YAAY;YACd;QACF;QAEA,IAAI;QAGJ,IAAI;YACF,iBAAiB,OAAO,EAAA;QAC1B,EAAA,OAAS,OAAO;YACd,iBAAiB,QAAQ,MAAA,CAAO;QAClC;QAEA,QAAQ,OAAA,CAAQ,gBACb,IAAA,CAAK,SACL,KAAA,CAAM,CAAC;YAEN,IAAI,YAAY;gBACd;YACF;YAGA,MAAM,QAAQ,OAAO,KAAA,IAAA,CAAU,yLAAW,IAAI,CAAA;YAC9C,MAAM,aAAa,OAAO,UAAA,IAAc;YACxC,MAAM,QACJ,OAAO,eAAe,aAClB,WAAW,cAAc,SACzB;YACN,MAAM,cACJ,UAAU,QACT,OAAO,UAAU,YAAY,eAAe,SAC5C,OAAO,UAAU,cAAc,MAAM,cAAc;YAEtD,IAAI,oBAAoB,CAAC,aAAa;gBAEpC,OAAO;gBACP;YACF;YAEA;YAGA,OAAO,MAAA,GAAS,cAAc;YAG9B,oLAAM,OAEH,IAAA,CAAK;gBACJ,IAAI,eAAe;oBACjB,OAAO;gBACT;gBACA;YACF,GACC,IAAA,CAAK;gBACJ,IAAI,kBAAkB;oBACpB,OAAO;gBACT,OAAO;oBACL;gBACF;YACF;QACJ;IACJ;IAGA,IAAI,SAAS,OAAO,WAAW,GAAG;QAChC;IACF,OAAO;QACL,QAAQ,IAAA,CAAK;IACf;IAEA,OAAO;QACL;QACA;QACA,UAAU;YACR,MAAM,cAAc;YACpB,OAAO,cAAc,UAAU,QAAQ,OAAA;QACzC;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":["../../src/removable.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/removable.js"],"sourcesContent":["import { isServer, isValidTimeout } from './utils'\n\nexport abstract class Removable {\n  gcTime!: number\n  #gcTimeout?: ReturnType<typeof setTimeout>\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove()\n      }, this.gcTime)\n    }\n  }\n\n  protected updateGcTime(newGcTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no gcTime is set\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout)\n      this.#gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n",null],"names":[],"mappings":";;;;;;;AAEO,IAAe,YAAf;IAEL,CAAA,SAAA,CAAA;IAEA,UAAgB;QACd,IAAA,CAAK,cAAA;IACP;IAEU,aAAmB;QAC3B,IAAA,CAAK,cAAA;QAEL,IAAI,6LAAe,IAAA,CAAK,MAAM,GAAG;YAC/B,IAAA,CAAK,CAAA,SAAA,GAAa,WAAW;gBAC3B,IAAA,CAAK,cAAA;YACP,GAAG,IAAA,CAAK,MAAM;QAChB;IACF;IAEU,aAAa,SAAA,EAAqC;QAE1D,IAAA,CAAK,MAAA,GAAS,KAAK,GAAA,CACjB,IAAA,CAAK,MAAA,IAAU,GACf,aAAA,CAAc,yLAAW,WAAW,IAAI,KAAK,GAAA;IAEjD;IAEU,iBAAiB;QACzB,IAAI,IAAA,CAAK,CAAA,SAAA,EAAY;YACnB,aAAa,IAAA,CAAK,CAAA,SAAU;YAC5B,IAAA,CAAK,CAAA,SAAA,GAAa,KAAA;QACpB;IACF;AAGF"}},
    {"offset": {"line": 652, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 657, "column": 0}, "map": {"version":3,"sources":["../../src/query.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/query.js"],"sourcesContent":["import { noop, replaceData, skipToken, timeUntilStale } from './utils'\nimport { notifyManager } from './notifyManager'\nimport { canFetch, createRetryer, isCancelledError } from './retryer'\nimport { Removable } from './removable'\nimport type {\n  CancelOptions,\n  DefaultError,\n  FetchStatus,\n  InitialDataFunction,\n  QueryFunctionContext,\n  QueryKey,\n  QueryMeta,\n  QueryOptions,\n  QueryStatus,\n  SetDataOptions,\n} from './types'\nimport type { QueryCache } from './queryCache'\nimport type { QueryObserver } from './queryObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface QueryConfig<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  cache: QueryCache\n  queryKey: TQueryKey\n  queryHash: string\n  options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state?: QueryState<TData, TError>\n}\n\nexport interface QueryState<TData = unknown, TError = DefaultError> {\n  data: TData | undefined\n  dataUpdateCount: number\n  dataUpdatedAt: number\n  error: TError | null\n  errorUpdateCount: number\n  errorUpdatedAt: number\n  fetchFailureCount: number\n  fetchFailureReason: TError | null\n  fetchMeta: FetchMeta | null\n  isInvalidated: boolean\n  status: QueryStatus\n  fetchStatus: FetchStatus\n}\n\nexport interface FetchContext<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  fetchFn: () => unknown | Promise<unknown>\n  fetchOptions?: FetchOptions\n  signal: AbortSignal\n  options: QueryOptions<TQueryFnData, TError, TData, any>\n  queryKey: TQueryKey\n  state: QueryState<TData, TError>\n}\n\nexport interface QueryBehavior<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  onFetch: (\n    context: FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n    query: Query,\n  ) => void\n}\n\nexport type FetchDirection = 'forward' | 'backward'\n\nexport interface FetchMeta {\n  fetchMore?: { direction: FetchDirection }\n}\n\nexport interface FetchOptions {\n  cancelRefetch?: boolean\n  meta?: FetchMeta\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError\n}\n\ninterface FetchAction {\n  type: 'fetch'\n  meta?: FetchMeta\n}\n\ninterface SuccessAction<TData> {\n  data: TData | undefined\n  type: 'success'\n  dataUpdatedAt?: number\n  manual?: boolean\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface InvalidateAction {\n  type: 'invalidate'\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError> {\n  type: 'setState'\n  state: Partial<QueryState<TData, TError>>\n  setStateOptions?: SetStateOptions\n}\n\nexport type Action<TData, TError> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | FetchAction\n  | InvalidateAction\n  | PauseAction\n  | SetStateAction<TData, TError>\n  | SuccessAction<TData>\n\nexport interface SetStateOptions {\n  meta?: any\n}\n\n// CLASS\n\nexport class Query<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Removable {\n  queryKey: TQueryKey\n  queryHash: string\n  options!: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state: QueryState<TData, TError>\n  isFetchingOptimistic?: boolean\n\n  #initialState: QueryState<TData, TError>\n  #revertState?: QueryState<TData, TError>\n  #cache: QueryCache\n  #retryer?: Retryer<TData>\n  #observers: Array<QueryObserver<any, any, any, any, any>>\n  #defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  #abortSignalConsumed: boolean\n\n  constructor(config: QueryConfig<TQueryFnData, TError, TData, TQueryKey>) {\n    super()\n\n    this.#abortSignalConsumed = false\n    this.#defaultOptions = config.defaultOptions\n    this.setOptions(config.options)\n    this.#observers = []\n    this.#cache = config.cache\n    this.queryKey = config.queryKey\n    this.queryHash = config.queryHash\n    this.#initialState = config.state || getDefaultState(this.options)\n    this.state = this.#initialState\n    this.scheduleGc()\n  }\n  get meta(): QueryMeta | undefined {\n    return this.options.meta\n  }\n\n  setOptions(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): void {\n    this.options = { ...this.#defaultOptions, ...options }\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  protected optionalRemove() {\n    if (!this.#observers.length && this.state.fetchStatus === 'idle') {\n      this.#cache.remove(this)\n    }\n  }\n\n  setData(\n    newData: TData,\n    options?: SetDataOptions & { manual: boolean },\n  ): TData {\n    const data = replaceData(this.state.data, newData, this.options)\n\n    // Set data and mark it as cached\n    this.#dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual,\n    })\n\n    return data\n  }\n\n  setState(\n    state: Partial<QueryState<TData, TError>>,\n    setStateOptions?: SetStateOptions,\n  ): void {\n    this.#dispatch({ type: 'setState', state, setStateOptions })\n  }\n\n  cancel(options?: CancelOptions): Promise<void> {\n    const promise = this.#retryer?.promise\n    this.#retryer?.cancel(options)\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve()\n  }\n\n  destroy(): void {\n    super.destroy()\n\n    this.cancel({ silent: true })\n  }\n\n  reset(): void {\n    this.destroy()\n    this.setState(this.#initialState)\n  }\n\n  isActive(): boolean {\n    return this.#observers.some(\n      (observer) => observer.options.enabled !== false,\n    )\n  }\n\n  isDisabled(): boolean {\n    return this.getObserversCount() > 0 && !this.isActive()\n  }\n\n  isStale(): boolean {\n    if (this.state.isInvalidated) {\n      return true\n    }\n\n    if (this.getObserversCount() > 0) {\n      return this.#observers.some(\n        (observer) => observer.getCurrentResult().isStale,\n      )\n    }\n\n    return this.state.data === undefined\n  }\n\n  isStaleByTime(staleTime = 0): boolean {\n    return (\n      this.state.isInvalidated ||\n      this.state.data === undefined ||\n      !timeUntilStale(this.state.dataUpdatedAt, staleTime)\n    )\n  }\n\n  onFocus(): void {\n    const observer = this.#observers.find((x) => x.shouldFetchOnWindowFocus())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  onOnline(): void {\n    const observer = this.#observers.find((x) => x.shouldFetchOnReconnect())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  addObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer)\n\n      // Stop the query from being garbage collected\n      this.clearGcTimeout()\n\n      this.#cache.notify({ type: 'observerAdded', query: this, observer })\n    }\n  }\n\n  removeObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.#observers.includes(observer)) {\n      this.#observers = this.#observers.filter((x) => x !== observer)\n\n      if (!this.#observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true })\n          } else {\n            this.#retryer.cancelRetry()\n          }\n        }\n\n        this.scheduleGc()\n      }\n\n      this.#cache.notify({ type: 'observerRemoved', query: this, observer })\n    }\n  }\n\n  getObserversCount(): number {\n    return this.#observers.length\n  }\n\n  invalidate(): void {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: 'invalidate' })\n    }\n  }\n\n  fetch(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    fetchOptions?: FetchOptions,\n  ): Promise<TData> {\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.data !== undefined && fetchOptions?.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetch\n        this.cancel({ silent: true })\n      } else if (this.#retryer) {\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        this.#retryer.continueRetry()\n        // Return current promise if we are already fetching\n        return this.#retryer.promise\n      }\n    }\n\n    // Update config if passed, otherwise the config from the last execution is used\n    if (options) {\n      this.setOptions(options)\n    }\n\n    // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n    if (!this.options.queryFn) {\n      const observer = this.#observers.find((x) => x.options.queryFn)\n      if (observer) {\n        this.setOptions(observer.options)\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`,\n        )\n      }\n    }\n\n    const abortController = new AbortController()\n\n    // Create query function context\n    const queryFnContext: Omit<QueryFunctionContext<TQueryKey>, 'signal'> = {\n      queryKey: this.queryKey,\n      meta: this.meta,\n    }\n\n    // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n    const addSignalProperty = (object: unknown) => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true\n          return abortController.signal\n        },\n      })\n    }\n\n    addSignalProperty(queryFnContext)\n\n    // Create fetch function\n    const fetchFn = () => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.options.queryFn === skipToken) {\n          console.error(\n            `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${this.options.queryHash}'`,\n          )\n        }\n      }\n\n      if (!this.options.queryFn || this.options.queryFn === skipToken) {\n        return Promise.reject(\n          new Error(`Missing queryFn: '${this.options.queryHash}'`),\n        )\n      }\n\n      this.#abortSignalConsumed = false\n      if (this.options.persister) {\n        return this.options.persister(\n          this.options.queryFn,\n          queryFnContext as QueryFunctionContext<TQueryKey>,\n          this as unknown as Query,\n        )\n      }\n\n      return this.options.queryFn(\n        queryFnContext as QueryFunctionContext<TQueryKey>,\n      )\n    }\n\n    // Trigger behavior hook\n    const context: Omit<\n      FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n      'signal'\n    > = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn,\n    }\n\n    addSignalProperty(context)\n\n    this.options.behavior?.onFetch(\n      context as FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n      this as unknown as Query,\n    )\n\n    // Store state in case the current fetch needs to be reverted\n    this.#revertState = this.state\n\n    // Set to fetching state if not already in it\n    if (\n      this.state.fetchStatus === 'idle' ||\n      this.state.fetchMeta !== context.fetchOptions?.meta\n    ) {\n      this.#dispatch({ type: 'fetch', meta: context.fetchOptions?.meta })\n    }\n\n    const onError = (error: TError | { silent?: boolean }) => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: 'error',\n          error: error as TError,\n        })\n      }\n\n      if (!isCancelledError(error)) {\n        // Notify cache callback\n        this.#cache.config.onError?.(\n          error as any,\n          this as Query<any, any, any, any>,\n        )\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error as any,\n          this as Query<any, any, any, any>,\n        )\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc()\n      }\n      this.isFetchingOptimistic = false\n    }\n\n    // Try to fetch the data\n    this.#retryer = createRetryer({\n      fn: context.fetchFn as () => Promise<TData>,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === undefined) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`,\n            )\n          }\n          onError(new Error(`${this.queryHash} data is undefined`) as any)\n          return\n        }\n\n        this.setData(data)\n\n        // Notify cache callback\n        this.#cache.config.onSuccess?.(data, this as Query<any, any, any, any>)\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error as any,\n          this as Query<any, any, any, any>,\n        )\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc()\n        }\n        this.isFetchingOptimistic = false\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.#dispatch({ type: 'continue' })\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n    })\n\n    return this.#retryer.promise\n  }\n\n  #dispatch(action: Action<TData, TError>): void {\n    const reducer = (\n      state: QueryState<TData, TError>,\n    ): QueryState<TData, TError> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            fetchStatus: 'paused',\n          }\n        case 'continue':\n          return {\n            ...state,\n            fetchStatus: 'fetching',\n          }\n        case 'fetch':\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null,\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null,\n            }),\n          }\n        case 'error':\n          const error = action.error as unknown\n\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: 'idle' }\n          }\n\n          return {\n            ...state,\n            error: error as TError,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error as TError,\n            fetchStatus: 'idle',\n            status: 'error',\n          }\n        case 'invalidate':\n          return {\n            ...state,\n            isInvalidated: true,\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onQueryUpdate()\n      })\n\n      this.#cache.notify({ query: this, type: 'updated', action })\n    })\n  }\n}\n\nexport function fetchState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  data: TData | undefined,\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? 'fetching' : 'paused',\n    ...(data === undefined &&\n      ({\n        error: null,\n        status: 'pending',\n      } as const)),\n  } as const\n}\n\nfunction getDefaultState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): QueryState<TData, TError> {\n  const data =\n    typeof options.initialData === 'function'\n      ? (options.initialData as InitialDataFunction<TData>)()\n      : options.initialData\n\n  const hasData = data !== undefined\n\n  const initialDataUpdatedAt = hasData\n    ? typeof options.initialDataUpdatedAt === 'function'\n      ? (options.initialDataUpdatedAt as () => number | undefined)()\n      : options.initialDataUpdatedAt\n    : 0\n\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'pending',\n    fetchStatus: 'idle',\n  }\n}\n",null],"names":[],"mappings":"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"}},
    {"offset": {"line": 1060, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1065, "column": 0}, "map": {"version":3,"sources":["../../src/queryCache.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/queryCache.js"],"sourcesContent":["import { hashQueryKeyByOptions, matchQuery } from './utils'\nimport { Query } from './query'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport type { QueryFilters } from './utils'\nimport type { Action, QueryState } from './query'\nimport type {\n  DefaultError,\n  NotifyEvent,\n  QueryKey,\n  QueryOptions,\n  WithRequired,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (\n    error: DefaultError,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n}\n\ninterface NotifyEventQueryAdded extends NotifyEvent {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved extends NotifyEvent {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated extends NotifyEvent {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated extends NotifyEvent {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\nexport type QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\nexport interface QueryStore {\n  has: (queryHash: string) => boolean\n  set: (queryHash: string, query: Query) => void\n  get: (queryHash: string) => Query | undefined\n  delete: (queryHash: string) => void\n  values: () => IterableIterator<Query>\n}\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  #queries: QueryStore\n\n  constructor(public config: QueryCacheConfig = {}) {\n    super()\n    this.#queries = new Map<string, Query>()\n  }\n\n  build<TQueryFnData, TError, TData, TQueryKey extends QueryKey>(\n    client: QueryClient,\n    options: WithRequired<\n      QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query)\n\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.#queries.get(query.queryHash)\n\n    if (queryInMap) {\n      query.destroy()\n\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash)\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> | undefined {\n    return this.#queries.get(queryHash) as\n      | Query<TQueryFnData, TError, TData, TQueryKey>\n      | undefined\n  }\n\n  getAll(): Array<Query> {\n    return [...this.#queries.values()]\n  }\n\n  find<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData>(\n    filters: WithRequired<QueryFilters, 'queryKey'>,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((query) =>\n      matchQuery(defaultedFilters, query),\n    ) as Query<TQueryFnData, TError, TData> | undefined\n  }\n\n  findAll(filters: QueryFilters = {}): Array<Query> {\n    const queries = this.getAll()\n    return Object.keys(filters).length > 0\n      ? queries.filter((query) => matchQuery(filters, query))\n      : queries\n  }\n\n  notify(event: QueryCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n",null],"names":[],"mappings":";;;;;;;;;;;;;AA2FO,IAAM,aAAN;IAGL,YAAmB,SAA2B,CAAC,CAAA,CAAG;QAChD,KAAA;QADiB,IAAA,CAAA,MAAA,GAAA;QAEjB,IAAA,CAAK,CAAA,OAAA,GAAW,aAAA,GAAA,IAAI;IACtB;IALA,CAAA,OAAA,CAAA;IAOA,MACE,MAAA,EACA,OAAA,EAIA,KAAA,EAC+C;QAC/C,MAAM,WAAW,QAAQ,QAAA;QACzB,MAAM,YACJ,QAAQ,SAAA,IAAa,oMAAsB,UAAU;QACvD,IAAI,QAAQ,IAAA,CAAK,GAAA,CAA4C;QAE7D,IAAI,CAAC,OAAO;YACV,QAAQ,wLAAU;gBAChB,OAAO,IAAA;gBACP;gBACA;gBACA,SAAS,OAAO,mBAAA,CAAoB;gBACpC;gBACA,gBAAgB,OAAO,gBAAA,CAAiB;YAC1C;YACA,IAAA,CAAK,GAAA,CAAI;QACX;QAEA,OAAO;IACT;IAEA,IAAI,KAAA,EAAwC;QAC1C,IAAI,CAAC,IAAA,CAAK,CAAA,OAAA,CAAS,GAAA,CAAI,MAAM,SAAS,GAAG;YACvC,IAAA,CAAK,CAAA,OAAA,CAAS,GAAA,CAAI,MAAM,SAAA,EAAW;YAEnC,IAAA,CAAK,MAAA,CAAO;gBACV,MAAM;gBACN;YACF;QACF;IACF;IAEA,OAAO,KAAA,EAAwC;QAC7C,MAAM,aAAa,IAAA,CAAK,CAAA,OAAA,CAAS,GAAA,CAAI,MAAM,SAAS;QAEpD,IAAI,YAAY;YACd,MAAM,OAAA;YAEN,IAAI,eAAe,OAAO;gBACxB,IAAA,CAAK,CAAA,OAAA,CAAS,MAAA,CAAO,MAAM,SAAS;YACtC;YAEA,IAAA,CAAK,MAAA,CAAO;gBAAE,MAAM;gBAAW;YAAM;QACvC;IACF;IAEA,QAAc;QACZ,oMAAc,KAAA,CAAM;YAClB,IAAA,CAAK,MAAA,GAAS,OAAA,CAAQ,CAAC;gBACrB,IAAA,CAAK,MAAA,CAAO;YACd;QACF;IACF;IAEA,IAME,SAAA,EAC2D;QAC3D,OAAO,IAAA,CAAK,CAAA,OAAA,CAAS,GAAA,CAAI;IAG3B;IAEA,SAAuB;QACrB,OAAO;eAAI,IAAA,CAAK,CAAA,OAAA,CAAS,MAAA;SAAQ;IACnC;IAEA,KACE,OAAA,EACgD;QAChD,MAAM,mBAAmB;YAAE,OAAO;YAAM,GAAG,OAAA;QAAQ;QAEnD,OAAO,IAAA,CAAK,MAAA,GAAS,IAAA,CAAK,CAAC,QACzB,yLAAW,kBAAkB;IAEjC;IAEA,QAAQ,UAAwB,CAAC,CAAA,EAAiB;QAChD,MAAM,UAAU,IAAA,CAAK,MAAA;QACrB,OAAO,OAAO,IAAA,CAAK,SAAS,MAAA,GAAS,IACjC,QAAQ,MAAA,CAAO,CAAC,QAAU,yLAAW,SAAS,UAC9C;IACN;IAEA,OAAO,KAAA,EAA8B;QACnC,oMAAc,KAAA,CAAM;YAClB,IAAA,CAAK,SAAA,CAAU,OAAA,CAAQ,CAAC;gBACtB,SAAS;YACX;QACF;IACF;IAEA,UAAgB;QACd,oMAAc,KAAA,CAAM;YAClB,IAAA,CAAK,MAAA,GAAS,OAAA,CAAQ,CAAC;gBACrB,MAAM,OAAA;YACR;QACF;IACF;IAEA,WAAiB;QACf,oMAAc,KAAA,CAAM;YAClB,IAAA,CAAK,MAAA,GAAS,OAAA,CAAQ,CAAC;gBACrB,MAAM,QAAA;YACR;QACF;IACF;AACF"}},
    {"offset": {"line": 1174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1179, "column": 0}, "map": {"version":3,"sources":["../../src/mutation.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/mutation.js"],"sourcesContent":["import { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { canFetch, createRetryer } from './retryer'\nimport type {\n  DefaultError,\n  MutationMeta,\n  MutationOptions,\n  MutationStatus,\n} from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TContext> {\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TContext>\n  defaultOptions?: MutationOptions<TData, TError, TVariables, TContext>\n  state?: MutationState<TData, TError, TVariables, TContext>\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> {\n  context: TContext | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n  submittedAt: number\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface PendingAction<TVariables, TContext> {\n  type: 'pending'\n  variables?: TVariables\n  context?: TContext\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\nexport type Action<TData, TError, TVariables, TContext> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | PendingAction<TVariables, TContext>\n  | PauseAction\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TContext>\n  options!: MutationOptions<TData, TError, TVariables, TContext>\n  readonly mutationId: number\n\n  #observers: Array<MutationObserver<TData, TError, TVariables, TContext>>\n  #defaultOptions?: MutationOptions<TData, TError, TVariables, TContext>\n  #mutationCache: MutationCache\n  #retryer?: Retryer<TData>\n\n  constructor(config: MutationConfig<TData, TError, TVariables, TContext>) {\n    super()\n\n    this.mutationId = config.mutationId\n    this.#defaultOptions = config.defaultOptions\n    this.#mutationCache = config.mutationCache\n    this.#observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options?: MutationOptions<TData, TError, TVariables, TContext>,\n  ): void {\n    this.options = { ...this.#defaultOptions, ...options }\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.#mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.#observers = this.#observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.#mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === 'pending') {\n        this.scheduleGc()\n      } else {\n        this.#mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return (\n      this.#retryer?.continue() ??\n      // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n      this.execute(this.state.variables!)\n    )\n  }\n\n  async execute(variables: TVariables): Promise<TData> {\n    const executeMutation = () => {\n      this.#retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject(new Error('No mutationFn found'))\n          }\n          return this.options.mutationFn(variables)\n        },\n        onFail: (failureCount, error) => {\n          this.#dispatch({ type: 'failed', failureCount, error })\n        },\n        onPause: () => {\n          this.#dispatch({ type: 'pause' })\n        },\n        onContinue: () => {\n          this.#dispatch({ type: 'continue' })\n        },\n        retry: this.options.retry ?? 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode,\n      })\n\n      return this.#retryer.promise\n    }\n\n    const restored = this.state.status === 'pending'\n\n    try {\n      if (!restored) {\n        this.#dispatch({ type: 'pending', variables })\n        // Notify cache callback\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n        const context = await this.options.onMutate?.(variables)\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: 'pending',\n            context,\n            variables,\n          })\n        }\n      }\n      const data = await executeMutation()\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSuccess?.(data, variables, this.state.context!)\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSettled?.(data, null, variables, this.state.context)\n\n      this.#dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.#mutationCache.config.onError?.(\n          error as any,\n          variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onError?.(\n          error as TError,\n          variables,\n          this.state.context,\n        )\n\n        // Notify cache callback\n        await this.#mutationCache.config.onSettled?.(\n          undefined,\n          error as any,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          variables,\n          this.state.context,\n        )\n        throw error\n      } finally {\n        this.#dispatch({ type: 'error', error: error as TError })\n      }\n    }\n  }\n\n  #dispatch(action: Action<TData, TError, TVariables, TContext>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TContext>,\n    ): MutationState<TData, TError, TVariables, TContext> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'pending':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: 'pending',\n            variables: action.variables,\n            submittedAt: Date.now(),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.#mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TContext,\n>(): MutationState<TData, TError, TVariables, TContext> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n    submittedAt: 0,\n  }\n}\n",null],"names":[],"mappings":"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"}},
    {"offset": {"line": 1405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1410, "column": 0}, "map": {"version":3,"sources":["../../src/mutationCache.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/mutationCache.js"],"sourcesContent":["import { notifyManager } from './notifyManager'\nimport { Mutation } from './mutation'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\nimport type { MutationObserver } from './mutationObserver'\nimport type { DefaultError, MutationOptions, NotifyEvent } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Action, MutationState } from './mutation'\nimport type { MutationFilters } from './utils'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: DefaultError,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\nexport type MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  #mutations: Array<Mutation<any, any, any, any>>\n  #mutationId: number\n  #resuming: Promise<unknown> | undefined\n\n  constructor(public config: MutationCacheConfig = {}) {\n    super()\n    this.#mutations = []\n    this.#mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TContext>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n    state?: MutationState<TData, TError, TVariables, TContext>,\n  ): Mutation<TData, TError, TVariables, TContext> {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.#mutations.push(mutation)\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    this.#mutations = this.#mutations.filter((x) => x !== mutation)\n    this.notify({ type: 'removed', mutation })\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.remove(mutation)\n      })\n    })\n  }\n\n  getAll(): Array<Mutation> {\n    return this.#mutations\n  }\n\n  find<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = any,\n    TContext = unknown,\n  >(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TContext> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.#mutations.find((mutation) =>\n      matchMutation(defaultedFilters, mutation),\n    )\n  }\n\n  findAll(filters: MutationFilters = {}): Array<Mutation> {\n    return this.#mutations.filter((mutation) =>\n      matchMutation(filters, mutation),\n    )\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    this.#resuming = (this.#resuming ?? Promise.resolve())\n      .then(() => {\n        const pausedMutations = this.#mutations.filter((x) => x.state.isPaused)\n        return notifyManager.batch(() =>\n          pausedMutations.reduce(\n            (promise, mutation) =>\n              promise.then(() => mutation.continue().catch(noop)),\n            Promise.resolve() as Promise<unknown>,\n          ),\n        )\n      })\n      .then(() => {\n        this.#resuming = undefined\n      })\n\n    return this.#resuming\n  }\n}\n",null],"names":[],"mappings":";;;;;;;;;;;;;AAmFO,IAAM,gBAAN;IAKL,YAAmB,SAA8B,CAAC,CAAA,CAAG;QACnD,KAAA;QADiB,IAAA,CAAA,MAAA,GAAA;QAEjB,IAAA,CAAK,CAAA,SAAA,GAAa,EAAC;QACnB,IAAA,CAAK,CAAA,UAAA,GAAc;IACrB;IARA,CAAA,SAAA,CAAA;IACA,CAAA,UAAA,CAAA;IACA,CAAA,QAAA,CAAA;IAQA,MACE,MAAA,EACA,OAAA,EACA,KAAA,EAC+C;QAC/C,MAAM,WAAW,8LAAa;YAC5B,eAAe,IAAA;YACf,YAAY,EAAE,IAAA,CAAK,CAAA,UAAA;YACnB,SAAS,OAAO,sBAAA,CAAuB;YACvC;QACF;QAEA,IAAA,CAAK,GAAA,CAAI;QAET,OAAO;IACT;IAEA,IAAI,QAAA,EAA8C;QAChD,IAAA,CAAK,CAAA,SAAA,CAAW,IAAA,CAAK;QACrB,IAAA,CAAK,MAAA,CAAO;YAAE,MAAM;YAAS;QAAS;IACxC;IAEA,OAAO,QAAA,EAA8C;QACnD,IAAA,CAAK,CAAA,SAAA,GAAa,IAAA,CAAK,CAAA,SAAA,CAAW,MAAA,CAAO,CAAC,IAAM,MAAM;QACtD,IAAA,CAAK,MAAA,CAAO;YAAE,MAAM;YAAW;QAAS;IAC1C;IAEA,QAAc;QACZ,oMAAc,KAAA,CAAM;YAClB,IAAA,CAAK,CAAA,SAAA,CAAW,OAAA,CAAQ,CAAC;gBACvB,IAAA,CAAK,MAAA,CAAO;YACd;QACF;IACF;IAEA,SAA0B;QACxB,OAAO,IAAA,CAAK,CAAA,SAAA;IACd;IAEA,KAME,OAAA,EAC2D;QAC3D,MAAM,mBAAmB;YAAE,OAAO;YAAM,GAAG,OAAA;QAAQ;QAEnD,OAAO,IAAA,CAAK,CAAA,SAAA,CAAW,IAAA,CAAK,CAAC,WAC3B,4LAAc,kBAAkB;IAEpC;IAEA,QAAQ,UAA2B,CAAC,CAAA,EAAoB;QACtD,OAAO,IAAA,CAAK,CAAA,SAAA,CAAW,MAAA,CAAO,CAAC,WAC7B,4LAAc,SAAS;IAE3B;IAEA,OAAO,KAAA,EAAiC;QACtC,oMAAc,KAAA,CAAM;YAClB,IAAA,CAAK,SAAA,CAAU,OAAA,CAAQ,CAAC;gBACtB,SAAS;YACX;QACF;IACF;IAEA,wBAA0C;QACxC,IAAA,CAAK,CAAA,QAAA,GAAA,CAAa,IAAA,CAAK,CAAA,QAAA,IAAa,QAAQ,OAAA,EAAQ,EACjD,IAAA,CAAK;YACJ,MAAM,kBAAkB,IAAA,CAAK,CAAA,SAAA,CAAW,MAAA,CAAO,CAAC,IAAM,EAAE,KAAA,CAAM,QAAQ;YACtE,OAAO,oMAAc,KAAA,CAAM,IACzB,gBAAgB,MAAA,CACd,CAAC,SAAS,WACR,QAAQ,IAAA,CAAK,IAAM,SAAS,QAAA,GAAW,KAAA,uLACzC,QAAQ,OAAA;QAGd,GACC,IAAA,CAAK;YACJ,IAAA,CAAK,CAAA,QAAA,GAAY,KAAA;QACnB;QAEF,OAAO,IAAA,CAAK,CAAA,QAAA;IACd;AACF"}},
    {"offset": {"line": 1496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1501, "column": 0}, "map": {"version":3,"sources":["../../src/infiniteQueryBehavior.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js"],"sourcesContent":["import { addToEnd, addToStart, skipToken } from './utils'\nimport type { QueryBehavior } from './query'\nimport type {\n  InfiniteData,\n  InfiniteQueryPageParamsOptions,\n  QueryFunctionContext,\n  QueryKey,\n} from './types'\n\nexport function infiniteQueryBehavior<TQueryFnData, TError, TData, TPageParam>(\n  pages?: number,\n): QueryBehavior<TQueryFnData, TError, InfiniteData<TData, TPageParam>> {\n  return {\n    onFetch: (context, query) => {\n      const fetchFn = async () => {\n        const options = context.options as InfiniteQueryPageParamsOptions<TData>\n        const direction = context.fetchOptions?.meta?.fetchMore?.direction\n        const oldPages = context.state.data?.pages || []\n        const oldPageParams = context.state.data?.pageParams || []\n        const empty = { pages: [], pageParams: [] }\n        let cancelled = false\n\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true\n              } else {\n                context.signal.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        // Get query function\n        const queryFn =\n          context.options.queryFn && context.options.queryFn !== skipToken\n            ? context.options.queryFn\n            : () => {\n                if (process.env.NODE_ENV !== 'production') {\n                  if (context.options.queryFn === skipToken) {\n                    console.error(\n                      `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${context.options.queryHash}'`,\n                    )\n                  }\n                }\n                return Promise.reject(\n                  new Error(`Missing queryFn: '${context.options.queryHash}'`),\n                )\n              }\n\n        // Create function to fetch a page\n        const fetchPage = async (\n          data: InfiniteData<unknown>,\n          param: unknown,\n          previous?: boolean,\n        ): Promise<InfiniteData<unknown>> => {\n          if (cancelled) {\n            return Promise.reject()\n          }\n\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data)\n          }\n\n          const queryFnContext: Omit<\n            QueryFunctionContext<QueryKey, unknown>,\n            'signal'\n          > = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? 'backward' : 'forward',\n            meta: context.options.meta,\n          }\n\n          addSignalProperty(queryFnContext)\n\n          const page = await queryFn(\n            queryFnContext as QueryFunctionContext<QueryKey, unknown>,\n          )\n\n          const { maxPages } = context.options\n          const addTo = previous ? addToStart : addToEnd\n\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages),\n          }\n        }\n\n        let result: InfiniteData<unknown>\n\n        // fetch next / previous page?\n        if (direction && oldPages.length) {\n          const previous = direction === 'backward'\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams,\n          }\n          const param = pageParamFn(options, oldData)\n\n          result = await fetchPage(oldData, param, previous)\n        } else {\n          // Fetch first page\n          result = await fetchPage(\n            empty,\n            oldPageParams[0] ?? options.initialPageParam,\n          )\n\n          const remainingPages = pages ?? oldPages.length\n\n          // Fetch remaining pages\n          for (let i = 1; i < remainingPages; i++) {\n            const param = getNextPageParam(options, result)\n            result = await fetchPage(result, param)\n          }\n        }\n\n        return result\n      }\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn as any,\n            {\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal,\n            },\n            query,\n          )\n        }\n      } else {\n        context.fetchFn = fetchFn\n      }\n    },\n  }\n}\n\nfunction getNextPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  const lastIndex = pages.length - 1\n  return options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams,\n  )\n}\n\nfunction getPreviousPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  return options.getPreviousPageParam?.(\n    pages[0],\n    pages,\n    pageParams[0],\n    pageParams,\n  )\n}\n\n/**\n * Checks if there is a next page.\n */\nexport function hasNextPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data) return false\n  return getNextPageParam(options, data) != null\n}\n\n/**\n * Checks if there is a previous page.\n */\nexport function hasPreviousPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data || !options.getPreviousPageParam) return false\n  return getPreviousPageParam(options, data) != null\n}\n",null],"names":[],"mappings":"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"}},
    {"offset": {"line": 1620, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1625, "column": 0}, "map": {"version":3,"sources":["../../src/queryClient.ts","/turbopack/[project]/node_modules/@tanstack/query-core/build/modern/queryClient.js"],"sourcesContent":["import {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  skipToken,\n} from './utils'\nimport { QueryCache } from './queryCache'\nimport { MutationCache } from './mutationCache'\nimport { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { notifyManager } from './notifyManager'\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'\nimport type { DataTag, NoInfer } from './types'\nimport type { QueryState } from './query'\nimport type {\n  CancelOptions,\n  DefaultError,\n  DefaultOptions,\n  DefaultedQueryObserverOptions,\n  EnsureQueryDataOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationKey,\n  MutationObserverOptions,\n  MutationOptions,\n  QueryClientConfig,\n  QueryKey,\n  QueryObserverOptions,\n  QueryOptions,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  SetDataOptions,\n} from './types'\nimport type { MutationFilters, QueryFilters, Updater } from './utils'\n\n// TYPES\n\ninterface QueryDefaults {\n  queryKey: QueryKey\n  defaultOptions: Omit<QueryOptions<any, any, any>, 'queryKey'>\n}\n\ninterface MutationDefaults {\n  mutationKey: MutationKey\n  defaultOptions: MutationOptions<any, any, any, any>\n}\n\n// CLASS\n\nexport class QueryClient {\n  #queryCache: QueryCache\n  #mutationCache: MutationCache\n  #defaultOptions: DefaultOptions\n  #queryDefaults: Map<string, QueryDefaults>\n  #mutationDefaults: Map<string, MutationDefaults>\n  #mountCount: number\n  #unsubscribeFocus?: () => void\n  #unsubscribeOnline?: () => void\n\n  constructor(config: QueryClientConfig = {}) {\n    this.#queryCache = config.queryCache || new QueryCache()\n    this.#mutationCache = config.mutationCache || new MutationCache()\n    this.#defaultOptions = config.defaultOptions || {}\n    this.#queryDefaults = new Map()\n    this.#mutationDefaults = new Map()\n    this.#mountCount = 0\n  }\n\n  mount(): void {\n    this.#mountCount++\n    if (this.#mountCount !== 1) return\n\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations()\n        this.#queryCache.onFocus()\n      }\n    })\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations()\n        this.#queryCache.onOnline()\n      }\n    })\n  }\n\n  unmount(): void {\n    this.#mountCount--\n    if (this.#mountCount !== 0) return\n\n    this.#unsubscribeFocus?.()\n    this.#unsubscribeFocus = undefined\n\n    this.#unsubscribeOnline?.()\n    this.#unsubscribeOnline = undefined\n  }\n\n  isFetching(filters?: QueryFilters): number {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: 'fetching' })\n      .length\n  }\n\n  isMutating(filters?: MutationFilters): number {\n    return this.#mutationCache.findAll({ ...filters, status: 'pending' }).length\n  }\n\n  getQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = TTaggedQueryKey extends DataTag<\n      unknown,\n      infer TaggedValue\n    >\n      ? TaggedValue\n      : TQueryFnData,\n  >(queryKey: TTaggedQueryKey): TInferredQueryFnData | undefined\n  getQueryData(queryKey: QueryKey) {\n    const options = this.defaultQueryOptions({ queryKey })\n    return this.#queryCache.get(options.queryHash)?.state.data\n  }\n\n  ensureQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: EnsureQueryDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const cachedData = this.getQueryData<TData>(options.queryKey)\n\n    if (cachedData === undefined) return this.fetchQuery(options)\n    else {\n      const defaultedOptions = this.defaultQueryOptions(options)\n      const query = this.#queryCache.build(this, defaultedOptions)\n\n      if (\n        options.revalidateIfStale &&\n        query.isStaleByTime(defaultedOptions.staleTime)\n      ) {\n        void this.prefetchQuery(defaultedOptions)\n      }\n\n      return Promise.resolve(cachedData)\n    }\n  }\n\n  getQueriesData<TQueryFnData = unknown>(\n    filters: QueryFilters,\n  ): Array<[QueryKey, TQueryFnData | undefined]> {\n    return this.getQueryCache()\n      .findAll(filters)\n      .map(({ queryKey, state }) => {\n        const data = state.data as TQueryFnData | undefined\n        return [queryKey, data]\n      })\n  }\n\n  setQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = TTaggedQueryKey extends DataTag<\n      unknown,\n      infer TaggedValue\n    >\n      ? TaggedValue\n      : TQueryFnData,\n  >(\n    queryKey: TTaggedQueryKey,\n    updater: Updater<\n      NoInfer<TInferredQueryFnData> | undefined,\n      NoInfer<TInferredQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): TInferredQueryFnData | undefined {\n    const defaultedOptions = this.defaultQueryOptions<\n      any,\n      any,\n      unknown,\n      any,\n      QueryKey\n    >({ queryKey })\n\n    const query = this.#queryCache.get<TInferredQueryFnData>(\n      defaultedOptions.queryHash,\n    )\n    const prevData = query?.state.data\n    const data = functionalUpdate(updater, prevData)\n\n    if (data === undefined) {\n      return undefined\n    }\n\n    return this.#queryCache\n      .build(this, defaultedOptions)\n      .setData(data, { ...options, manual: true })\n  }\n\n  setQueriesData<TQueryFnData>(\n    filters: QueryFilters,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): Array<[QueryKey, TQueryFnData | undefined]> {\n    return notifyManager.batch(() =>\n      this.getQueryCache()\n        .findAll(filters)\n        .map(({ queryKey }) => [\n          queryKey,\n          this.setQueryData<TQueryFnData>(queryKey, updater, options),\n        ]),\n    )\n  }\n\n  getQueryState<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = TTaggedQueryKey extends DataTag<\n      unknown,\n      infer TaggedValue\n    >\n      ? TaggedValue\n      : TQueryFnData,\n  >(\n    queryKey: TTaggedQueryKey,\n  ): QueryState<TInferredQueryFnData, TError> | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n    return this.#queryCache.get<TInferredQueryFnData, TError>(options.queryHash)\n      ?.state\n  }\n\n  removeQueries(filters?: QueryFilters): void {\n    const queryCache = this.#queryCache\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query)\n      })\n    })\n  }\n\n  resetQueries(filters?: QueryFilters, options?: ResetOptions): Promise<void> {\n    const queryCache = this.#queryCache\n\n    const refetchFilters: RefetchQueryFilters = {\n      type: 'active',\n      ...filters,\n    }\n\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset()\n      })\n      return this.refetchQueries(refetchFilters, options)\n    })\n  }\n\n  cancelQueries(\n    filters: QueryFilters = {},\n    cancelOptions: CancelOptions = {},\n  ): Promise<void> {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions }\n\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map((query) => query.cancel(defaultedCancelOptions)),\n    )\n\n    return Promise.all(promises).then(noop).catch(noop)\n  }\n\n  invalidateQueries(\n    filters: InvalidateQueryFilters = {},\n    options: InvalidateOptions = {},\n  ): Promise<void> {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate()\n      })\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve()\n      }\n      const refetchFilters: RefetchQueryFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? 'active',\n      }\n      return this.refetchQueries(refetchFilters, options)\n    })\n  }\n\n  refetchQueries(\n    filters: RefetchQueryFilters = {},\n    options?: RefetchOptions,\n  ): Promise<void> {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options?.cancelRefetch ?? true,\n    }\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .filter((query) => !query.isDisabled())\n        .map((query) => {\n          let promise = query.fetch(undefined, fetchOptions)\n          if (!fetchOptions.throwOnError) {\n            promise = promise.catch(noop)\n          }\n          return query.state.fetchStatus === 'paused'\n            ? Promise.resolve()\n            : promise\n        }),\n    )\n\n    return Promise.all(promises).then(noop)\n  }\n\n  fetchQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options: FetchQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n\n    // https://github.com/tannerlinsley/react-query/issues/652\n    if (defaultedOptions.retry === undefined) {\n      defaultedOptions.retry = false\n    }\n\n    const query = this.#queryCache.build(this, defaultedOptions)\n\n    return query.isStaleByTime(defaultedOptions.staleTime)\n      ? query.fetch(defaultedOptions)\n      : Promise.resolve(query.state.data as TData)\n  }\n\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchQuery(options).then(noop).catch(noop)\n  }\n\n  fetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n    return this.fetchQuery(options)\n  }\n\n  prefetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<void> {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop)\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations()\n    }\n    return Promise.resolve()\n  }\n\n  getQueryCache(): QueryCache {\n    return this.#queryCache\n  }\n\n  getMutationCache(): MutationCache {\n    return this.#mutationCache\n  }\n\n  getDefaultOptions(): DefaultOptions {\n    return this.#defaultOptions\n  }\n\n  setDefaultOptions(options: DefaultOptions): void {\n    this.#defaultOptions = options\n  }\n\n  setQueryDefaults(\n    queryKey: QueryKey,\n    options: Partial<\n      Omit<QueryObserverOptions<unknown, any, any, any>, 'queryKey'>\n    >,\n  ): void {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options,\n    })\n  }\n\n  getQueryDefaults(\n    queryKey: QueryKey,\n  ): Omit<QueryObserverOptions<any, any, any, any, any>, 'queryKey'> {\n    const defaults = [...this.#queryDefaults.values()]\n\n    let result: Omit<\n      QueryObserverOptions<any, any, any, any, any>,\n      'queryKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        result = { ...result, ...queryDefault.defaultOptions }\n      }\n    })\n    return result\n  }\n\n  setMutationDefaults(\n    mutationKey: MutationKey,\n    options: Omit<MutationObserverOptions<any, any, any, any>, 'mutationKey'>,\n  ): void {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options,\n    })\n  }\n\n  getMutationDefaults(\n    mutationKey: MutationKey,\n  ): MutationObserverOptions<any, any, any, any> {\n    const defaults = [...this.#mutationDefaults.values()]\n\n    let result: MutationObserverOptions<any, any, any, any> = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        result = { ...result, ...queryDefault.defaultOptions }\n      }\n    })\n\n    return result\n  }\n\n  defaultQueryOptions<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options:\n      | QueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey,\n          TPageParam\n        >\n      | DefaultedQueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey\n        >,\n  ): DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  > {\n    if (options._defaulted) {\n      return options as DefaultedQueryObserverOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryData,\n        TQueryKey\n      >\n    }\n\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true,\n    }\n\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions,\n      )\n    }\n\n    // dependent default values\n    if (defaultedOptions.refetchOnReconnect === undefined) {\n      defaultedOptions.refetchOnReconnect =\n        defaultedOptions.networkMode !== 'always'\n    }\n    if (defaultedOptions.throwOnError === undefined) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense\n    }\n\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = 'offlineFirst'\n    }\n\n    if (\n      defaultedOptions.enabled !== true &&\n      defaultedOptions.queryFn === skipToken\n    ) {\n      defaultedOptions.enabled = false\n    }\n\n    return defaultedOptions as DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >\n  }\n\n  defaultMutationOptions<T extends MutationOptions<any, any, any, any>>(\n    options?: T,\n  ): T {\n    if (options?._defaulted) {\n      return options\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...(options?.mutationKey &&\n        this.getMutationDefaults(options.mutationKey)),\n      ...options,\n      _defaulted: true,\n    } as T\n  }\n\n  clear(): void {\n    this.#queryCache.clear()\n    this.#mutationCache.clear()\n  }\n}\n",null],"names":[],"mappings":"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"}},
    {"offset": {"line": 1932, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1937, "column": 0}, "map": {"version":3,"sources":["../../src/QueryClientProvider.tsx","/turbopack/[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\n\nexport const QueryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\n\nexport const useQueryClient = (queryClient?: QueryClient) => {\n  const client = React.useContext(QueryClientContext)\n\n  if (queryClient) {\n    return queryClient\n  }\n\n  if (!client) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return client\n}\n\nexport type QueryClientProviderProps = {\n  client: QueryClient\n  children?: React.ReactNode\n}\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n}: QueryClientProviderProps): JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  )\n}\n",null],"names":[],"mappings":";;;;;;;;;;;AAKO,IAAM,qBAA2B,8JAAA,aAAA,CACtC,KAAA;AAGK,IAAM,iBAAiB,CAAC;IAC7B,MAAM,SAAe,8JAAA,UAAA,CAAW;IAEhC,IAAI,aAAa;QACf,OAAO;IACT;IAEA,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAOO,IAAM,sBAAsB,CAAC,EAClC,MAAA,EACA,QAAA,EACF;IACQ,8JAAA,SAAA,CAAU;QACd,OAAO,KAAA;QACP,OAAO;YACL,OAAO,OAAA;QACT;IACF,GAAG;QAAC;KAAO;IAEX,OACE,aAAA,GAAA,8KAAC,mBAAmB,QAAA,EAAnB;QAA4B,OAAO;QACjC;IAAA;AAGP"}},
    {"offset": {"line": 1975, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1980, "column": 0}, "map": {"version":3,"sources":["../../src/devtools.tsx","/turbopack/[project]/node_modules/@tanstack/react-query-devtools/build/modern/devtools.js"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport { onlineManager, useQueryClient } from '@tanstack/react-query'\nimport { TanstackQueryDevtools } from '@tanstack/query-devtools'\nimport type {\n  DevToolsErrorType,\n  DevtoolsButtonPosition,\n  DevtoolsPosition,\n} from '@tanstack/query-devtools'\nimport type { QueryClient } from '@tanstack/react-query'\n\nexport interface DevtoolsOptions {\n  /**\n   * Set this true if you want the dev tools to default to being open\n   */\n  initialIsOpen?: boolean\n  /**\n   * The position of the React Query logo to open and close the devtools panel.\n   * 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n   * Defaults to 'bottom-right'.\n   */\n  buttonPosition?: DevtoolsButtonPosition\n  /**\n   * The position of the React Query devtools panel.\n   * 'top' | 'bottom' | 'left' | 'right'\n   * Defaults to 'bottom'.\n   */\n  position?: DevtoolsPosition\n  /**\n   * Custom instance of QueryClient\n   */\n  client?: QueryClient\n  /**\n   * Use this so you can define custom errors that can be shown in the devtools.\n   */\n  errorTypes?: Array<DevToolsErrorType>\n  /**\n   * Use this to pass a nonce to the style tag that is added to the document head. This is useful if you are using a Content Security Policy (CSP) nonce to allow inline styles.\n   */\n  styleNonce?: string\n  /**\n   * Use this so you can attach the devtool's styles to specific element in the DOM.\n   */\n  shadowDOMTarget?: ShadowRoot\n}\n\nexport function ReactQueryDevtools(\n  props: DevtoolsOptions,\n): React.ReactElement | null {\n  const queryClient = useQueryClient(props.client)\n  const ref = React.useRef<HTMLDivElement>(null)\n  const {\n    buttonPosition,\n    position,\n    initialIsOpen,\n    errorTypes,\n    styleNonce,\n    shadowDOMTarget,\n  } = props\n  const [devtools] = React.useState(\n    new TanstackQueryDevtools({\n      client: queryClient,\n      queryFlavor: 'React Query',\n      version: '5',\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce,\n      shadowDOMTarget,\n    }),\n  )\n\n  React.useEffect(() => {\n    devtools.setClient(queryClient)\n  }, [queryClient, devtools])\n\n  React.useEffect(() => {\n    if (buttonPosition) {\n      devtools.setButtonPosition(buttonPosition)\n    }\n  }, [buttonPosition, devtools])\n\n  React.useEffect(() => {\n    if (position) {\n      devtools.setPosition(position)\n    }\n  }, [position, devtools])\n\n  React.useEffect(() => {\n    devtools.setInitialIsOpen(initialIsOpen || false)\n  }, [initialIsOpen, devtools])\n\n  React.useEffect(() => {\n    devtools.setErrorTypes(errorTypes || [])\n  }, [errorTypes, devtools])\n\n  React.useEffect(() => {\n    if (ref.current) {\n      devtools.mount(ref.current)\n    }\n\n    return () => {\n      devtools.unmount()\n    }\n  }, [devtools])\n\n  return <div className=\"tsqd-parent-container\" ref={ref}></div>\n}\n",null],"names":[],"mappings":";;;;;;;;;;;;;;AA8CO,SAAS,mBACd,KAAA;IAEA,MAAM,cAAc,4MAAe,MAAM,MAAM;IAC/C,MAAM,MAAY,8JAAA,MAAA,CAAuB;IACzC,MAAM,EACJ,cAAA,EACA,QAAA,EACA,aAAA,EACA,UAAA,EACA,UAAA,EACA,eAAA,EACF,GAAI;IACJ,MAAM,CAAC,SAAQ,GAAU,8JAAA,QAAA,CACvB,gMAA0B;QACxB,QAAQ;QACR,aAAa;QACb,SAAS;QACT,aAAA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IAGI,8JAAA,SAAA,CAAU;QACd,SAAS,SAAA,CAAU;IACrB,GAAG;QAAC;QAAa;KAAS;IAEpB,8JAAA,SAAA,CAAU;QACd,IAAI,gBAAgB;YAClB,SAAS,iBAAA,CAAkB;QAC7B;IACF,GAAG;QAAC;QAAgB;KAAS;IAEvB,8JAAA,SAAA,CAAU;QACd,IAAI,UAAU;YACZ,SAAS,WAAA,CAAY;QACvB;IACF,GAAG;QAAC;QAAU;KAAS;IAEjB,8JAAA,SAAA,CAAU;QACd,SAAS,gBAAA,CAAiB,iBAAiB;IAC7C,GAAG;QAAC;QAAe;KAAS;IAEtB,8JAAA,SAAA,CAAU;QACd,SAAS,aAAA,CAAc,cAAc,EAAE;IACzC,GAAG;QAAC;QAAY;KAAS;IAEnB,8JAAA,SAAA,CAAU;QACd,IAAI,IAAI,OAAA,EAAS;YACf,SAAS,KAAA,CAAM,IAAI,OAAO;QAC5B;QAEA,OAAO;YACL,SAAS,OAAA;QACX;IACF,GAAG;QAAC;KAAS;IAEb,OAAO,aAAA,GAAA,8KAAC,OAAA;QAAI,WAAU;QAAwB;IAAA;AAChD"}},
    {"offset": {"line": 2061, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2066, "column": 0}, "map": {"version":3,"sources":["../../src/index.ts","/turbopack/[project]/node_modules/@tanstack/react-query-devtools/build/modern/index.js"],"sourcesContent":["'use client'\n\nimport * as devtools from './devtools'\n\nexport const ReactQueryDevtools: (typeof devtools)['ReactQueryDevtools'] =\n  process.env.NODE_ENV !== 'development'\n    ? function () {\n        return null\n      }\n    : devtools.ReactQueryDevtools\n",null],"names":["ReactQueryDevtools"],"mappings":";;;;;;;;AAIO,IAAMA,sBACX,6EAIa,2LAAA,kBAAA"}},
    {"offset": {"line": 2077, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2081, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs"],"sourcesContent":["\"use strict\";\n\nexports._ = exports._interop_require_default = _interop_require_default;\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n"],"names":[],"mappings":"AAAA;AAEA,QAAQ,CAAC,GAAG,QAAQ,wBAAwB,GAAG;AAC/C,SAAS,yBAAyB,GAAG;IACjC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD"}},
    {"offset": {"line": 2088, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2093, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/esm/_interop_require_default.js"],"sourcesContent":["export function _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexport { _interop_require_default as _ };\n"],"names":[],"mappings":";;;;AAAO,SAAS,yBAAyB,GAAG;IACxC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD"}},
    {"offset": {"line": 2103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2107, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs"],"sourcesContent":["\"use strict\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nexports._ = exports._interop_require_wildcard = _interop_require_wildcard;\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\n"],"names":[],"mappings":"AAAA;AAEA,SAAS,yBAAyB,WAAW;IACzC,IAAI,OAAO,YAAY,YAAY,OAAO;IAE1C,IAAI,oBAAoB,IAAI;IAC5B,IAAI,mBAAmB,IAAI;IAE3B,OAAO,CAAC,2BAA2B,SAAS,WAAW;QACnD,OAAO,cAAc,mBAAmB;IAC5C,CAAC,EAAE;AACP;AACA,QAAQ,CAAC,GAAG,QAAQ,yBAAyB,GAAG;AAChD,SAAS,0BAA0B,GAAG,EAAE,WAAW;IAC/C,IAAI,CAAC,eAAe,OAAO,IAAI,UAAU,EAAE,OAAO;IAClD,IAAI,QAAQ,QAAQ,OAAO,QAAQ,YAAY,OAAO,QAAQ,YAAY,OAAO;QAAE,SAAS;IAAI;IAEhG,IAAI,QAAQ,yBAAyB;IAErC,IAAI,SAAS,MAAM,GAAG,CAAC,MAAM,OAAO,MAAM,GAAG,CAAC;IAE9C,IAAI,SAAS,CAAC;IACd,IAAI,wBAAwB,OAAO,cAAc,IAAI,OAAO,wBAAwB;IAEpF,IAAK,IAAI,OAAO,IAAK;QACjB,IAAI,QAAQ,aAAa,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,MAAM;YACrE,IAAI,OAAO,wBAAwB,OAAO,wBAAwB,CAAC,KAAK,OAAO;YAC/E,IAAI,QAAQ,CAAC,KAAK,GAAG,IAAI,KAAK,GAAG,GAAG,OAAO,cAAc,CAAC,QAAQ,KAAK;iBAClE,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;QAC/B;IACJ;IAEA,OAAO,OAAO,GAAG;IAEjB,IAAI,OAAO,MAAM,GAAG,CAAC,KAAK;IAE1B,OAAO;AACX"}},
    {"offset": {"line": 2137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2142, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/esm/_interop_require_wildcard.js"],"sourcesContent":["function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nexport function _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\nexport { _interop_require_wildcard as _ };\n"],"names":[],"mappings":";;;;AAAA,SAAS,yBAAyB,WAAW;IACzC,IAAI,OAAO,YAAY,YAAY,OAAO;IAE1C,IAAI,oBAAoB,IAAI;IAC5B,IAAI,mBAAmB,IAAI;IAE3B,OAAO,CAAC,2BAA2B,SAAS,WAAW;QACnD,OAAO,cAAc,mBAAmB;IAC5C,CAAC,EAAE;AACP;AACO,SAAS,0BAA0B,GAAG,EAAE,WAAW;IACtD,IAAI,CAAC,eAAe,OAAO,IAAI,UAAU,EAAE,OAAO;IAClD,IAAI,QAAQ,QAAQ,OAAO,QAAQ,YAAY,OAAO,QAAQ,YAAY,OAAO;QAAE,SAAS;IAAI;IAEhG,IAAI,QAAQ,yBAAyB;IAErC,IAAI,SAAS,MAAM,GAAG,CAAC,MAAM,OAAO,MAAM,GAAG,CAAC;IAE9C,IAAI,SAAS,CAAC;IACd,IAAI,wBAAwB,OAAO,cAAc,IAAI,OAAO,wBAAwB;IAEpF,IAAK,IAAI,OAAO,IAAK;QACjB,IAAI,QAAQ,aAAa,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,MAAM;YACrE,IAAI,OAAO,wBAAwB,OAAO,wBAAwB,CAAC,KAAK,OAAO;YAC/E,IAAI,QAAQ,CAAC,KAAK,GAAG,IAAI,KAAK,GAAG,GAAG,OAAO,cAAc,CAAC,QAAQ,KAAK;iBAClE,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;QAC/B;IACJ;IAEA,OAAO,OAAO,GAAG;IAEjB,IAAI,OAAO,MAAM,GAAG,CAAC,KAAK;IAE1B,OAAO;AACX"}},
    {"offset": {"line": 2175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2179, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/cjs/_class_private_field_loose_base.cjs"],"sourcesContent":["\"use strict\";\n\nexports._ = exports._class_private_field_loose_base = _class_private_field_loose_base;\nfunction _class_private_field_loose_base(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n        throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n\n    return receiver;\n}\n"],"names":[],"mappings":"AAAA;AAEA,QAAQ,CAAC,GAAG,QAAQ,+BAA+B,GAAG;AACtD,SAAS,gCAAgC,QAAQ,EAAE,UAAU;IACzD,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,aAAa;QAC7D,MAAM,IAAI,UAAU;IACxB;IAEA,OAAO;AACX"}},
    {"offset": {"line": 2187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2192, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/esm/_class_private_field_loose_base.js"],"sourcesContent":["export function _class_private_field_loose_base(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n        throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n\n    return receiver;\n}\nexport { _class_private_field_loose_base as _ };\n"],"names":[],"mappings":";;;;AAAO,SAAS,gCAAgC,QAAQ,EAAE,UAAU;IAChE,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,aAAa;QAC7D,MAAM,IAAI,UAAU;IACxB;IAEA,OAAO;AACX"}},
    {"offset": {"line": 2203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2207, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/cjs/_class_private_field_loose_key.cjs"],"sourcesContent":["\"use strict\";\n\nvar id = 0;\n\nexports._ = exports._class_private_field_loose_key = _class_private_field_loose_key;\nfunction _class_private_field_loose_key(name) {\n    return \"__private_\" + id++ + \"_\" + name;\n}\n"],"names":[],"mappings":"AAAA;AAEA,IAAI,KAAK;AAET,QAAQ,CAAC,GAAG,QAAQ,8BAA8B,GAAG;AACrD,SAAS,+BAA+B,IAAI;IACxC,OAAO,eAAe,OAAO,MAAM;AACvC"}},
    {"offset": {"line": 2213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2218, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/esm/_class_private_field_loose_key.js"],"sourcesContent":["var id = 0;\n\nexport function _class_private_field_loose_key(name) {\n    return \"__private_\" + id++ + \"_\" + name;\n}\nexport { _class_private_field_loose_key as _ };\n"],"names":[],"mappings":";;;;AAAA,IAAI,KAAK;AAEF,SAAS,+BAA+B,IAAI;IAC/C,OAAO,eAAe,OAAO,MAAM;AACvC"}},
    {"offset": {"line": 2227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2231, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/cjs/_tagged_template_literal_loose.cjs"],"sourcesContent":["\"use strict\";\n\nexports._ = exports._tagged_template_literal_loose = _tagged_template_literal_loose;\nfunction _tagged_template_literal_loose(strings, raw) {\n    if (!raw) raw = strings.slice(0);\n\n    strings.raw = raw;\n\n    return strings;\n}\n"],"names":[],"mappings":"AAAA;AAEA,QAAQ,CAAC,GAAG,QAAQ,8BAA8B,GAAG;AACrD,SAAS,+BAA+B,OAAO,EAAE,GAAG;IAChD,IAAI,CAAC,KAAK,MAAM,QAAQ,KAAK,CAAC;IAE9B,QAAQ,GAAG,GAAG;IAEd,OAAO;AACX"}},
    {"offset": {"line": 2238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2243, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/esm/_tagged_template_literal_loose.js"],"sourcesContent":["export function _tagged_template_literal_loose(strings, raw) {\n    if (!raw) raw = strings.slice(0);\n\n    strings.raw = raw;\n\n    return strings;\n}\nexport { _tagged_template_literal_loose as _ };\n"],"names":[],"mappings":";;;;AAAO,SAAS,+BAA+B,OAAO,EAAE,GAAG;IACvD,IAAI,CAAC,KAAK,MAAM,QAAQ,KAAK,CAAC;IAE9B,QAAQ,GAAG,GAAG;IAEd,OAAO;AACX"}},
    {"offset": {"line": 2253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}